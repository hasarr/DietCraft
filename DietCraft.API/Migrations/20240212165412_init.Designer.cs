// <auto-generated />
using DietCraft.API.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DietCraft.API.Migrations
{
    [DbContext(typeof(DietCraftContext))]
    [Migration("20240212165412_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.1");

            modelBuilder.Entity("DietCraft.API.Entities.Diet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DietTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("UserIdIfCustom")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("isCustom")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DietTypeId");

                    b.ToTable("Diets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DietTypeId = 1,
                            Name = "Vegan Diet",
                            UserIdIfCustom = 0,
                            isCustom = false
                        },
                        new
                        {
                            Id = 2,
                            DietTypeId = 2,
                            Name = "Ketogenic Diet",
                            UserIdIfCustom = 0,
                            isCustom = false
                        },
                        new
                        {
                            Id = 3,
                            DietTypeId = 3,
                            Name = "Balanced Diet",
                            UserIdIfCustom = 1,
                            isCustom = true
                        },
                        new
                        {
                            Id = 4,
                            DietTypeId = 4,
                            Name = "Low Carb Diet",
                            UserIdIfCustom = 2,
                            isCustom = true
                        },
                        new
                        {
                            Id = 5,
                            DietTypeId = 5,
                            Name = "Mediterranean Diet",
                            UserIdIfCustom = 3,
                            isCustom = true
                        });
                });

            modelBuilder.Entity("DietCraft.API.Entities.DietType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte>("CarbPercent")
                        .HasColumnType("INTEGER");

                    b.Property<byte>("FatPercent")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<byte>("ProteinPercent")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("DietTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CarbPercent = (byte)50,
                            FatPercent = (byte)25,
                            Name = "Vegetarian",
                            ProteinPercent = (byte)25
                        },
                        new
                        {
                            Id = 2,
                            CarbPercent = (byte)10,
                            FatPercent = (byte)60,
                            Name = "Ketogenic",
                            ProteinPercent = (byte)30
                        },
                        new
                        {
                            Id = 3,
                            CarbPercent = (byte)40,
                            FatPercent = (byte)30,
                            Name = "Balanced",
                            ProteinPercent = (byte)30
                        },
                        new
                        {
                            Id = 4,
                            CarbPercent = (byte)20,
                            FatPercent = (byte)40,
                            Name = "Low Carb",
                            ProteinPercent = (byte)40
                        },
                        new
                        {
                            Id = 5,
                            CarbPercent = (byte)45,
                            FatPercent = (byte)35,
                            Name = "Mediterranean",
                            ProteinPercent = (byte)20
                        });
                });

            modelBuilder.Entity("DietCraft.API.Entities.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CarbGram")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FatGram")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsVegan")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Kcal")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProteinGram")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Ingredients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CarbGram = 10,
                            FatGram = 0,
                            IsVegan = true,
                            Kcal = 50,
                            Name = "Broccoli",
                            Price = 3.5m,
                            ProteinGram = 3
                        },
                        new
                        {
                            Id = 2,
                            CarbGram = 0,
                            FatGram = 10,
                            IsVegan = false,
                            Kcal = 200,
                            Name = "Chicken",
                            Price = 7.5m,
                            ProteinGram = 20
                        },
                        new
                        {
                            Id = 3,
                            CarbGram = 0,
                            FatGram = 15,
                            IsVegan = false,
                            Kcal = 250,
                            Name = "Salmon",
                            Price = 10.0m,
                            ProteinGram = 22
                        },
                        new
                        {
                            Id = 4,
                            CarbGram = 25,
                            FatGram = 2,
                            IsVegan = true,
                            Kcal = 120,
                            Name = "Quinoa",
                            Price = 5.0m,
                            ProteinGram = 4
                        },
                        new
                        {
                            Id = 5,
                            CarbGram = 0,
                            FatGram = 20,
                            IsVegan = false,
                            Kcal = 300,
                            Name = "Beef",
                            Price = 12.0m,
                            ProteinGram = 25
                        });
                });

            modelBuilder.Entity("DietCraft.API.Entities.IngredientsForMeal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Grams")
                        .HasColumnType("TEXT");

                    b.Property<int>("IngredientId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsOptional")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MealId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Mililiters")
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("IngredientId");

                    b.HasIndex("MealId");

                    b.ToTable("IngredientsForMeals");
                });

            modelBuilder.Entity("DietCraft.API.Entities.Meal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsVegan")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UserIdIfCustom")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Meals");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsVegan = true,
                            Name = "Broccoli Salad",
                            UserIdIfCustom = 0
                        },
                        new
                        {
                            Id = 2,
                            IsVegan = false,
                            Name = "Grilled Chicken",
                            UserIdIfCustom = 0
                        },
                        new
                        {
                            Id = 3,
                            IsVegan = false,
                            Name = "Salmon Fillet",
                            UserIdIfCustom = 0
                        },
                        new
                        {
                            Id = 4,
                            IsVegan = true,
                            Name = "Quinoa Bowl",
                            UserIdIfCustom = 0
                        },
                        new
                        {
                            Id = 5,
                            IsVegan = false,
                            Name = "Beef Stir Fry",
                            UserIdIfCustom = 0
                        });
                });

            modelBuilder.Entity("DietCraft.API.Entities.Recipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DescriptionHTML")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("MealId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TitleHTML")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("isStepByStep")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MealId");

                    b.ToTable("Recipes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DescriptionHTML = "<p>Delicious broccoli salad recipe.</p>",
                            MealId = 1,
                            Name = "Broccoli Salad Recipe",
                            TitleHTML = "<h1>Broccoli Salad</h1>",
                            isStepByStep = true
                        },
                        new
                        {
                            Id = 2,
                            DescriptionHTML = "<p>Perfectly grilled chicken recipe.</p>",
                            MealId = 2,
                            Name = "Grilled Chicken Recipe",
                            TitleHTML = "<h1>Grilled Chicken</h1>",
                            isStepByStep = true
                        },
                        new
                        {
                            Id = 3,
                            DescriptionHTML = "<p>Simple and tasty salmon fillet recipe.</p>",
                            MealId = 3,
                            Name = "Salmon Fillet Recipe",
                            TitleHTML = "<h1>Salmon Fillet</h1>",
                            isStepByStep = true
                        },
                        new
                        {
                            Id = 4,
                            DescriptionHTML = "<p>Healthy and flavorful quinoa bowl recipe.</p>",
                            MealId = 4,
                            Name = "Quinoa Bowl Recipe",
                            TitleHTML = "<h1>Quinoa Bowl</h1>",
                            isStepByStep = true
                        },
                        new
                        {
                            Id = 5,
                            DescriptionHTML = "<p>Quick and easy beef stir fry recipe.</p>",
                            MealId = 5,
                            Name = "Beef Stir Fry Recipe",
                            TitleHTML = "<h1>Beef Stir Fry</h1>",
                            isStepByStep = true
                        });
                });

            modelBuilder.Entity("DietCraft.API.Entities.Role", b =>
                {
                    b.Property<byte>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = (byte)1,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = (byte)2,
                            Name = "User"
                        },
                        new
                        {
                            Id = (byte)3,
                            Name = "Manager"
                        },
                        new
                        {
                            Id = (byte)4,
                            Name = "Viewer"
                        },
                        new
                        {
                            Id = (byte)5,
                            Name = "Tester"
                        });
                });

            modelBuilder.Entity("DietCraft.API.Entities.ShoppingList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("ShoppingLists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Weekly Grocery List",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Monthly Grocery List",
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            Name = "Family Grocery List",
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            Name = "Holiday Grocery List",
                            UserId = 4
                        },
                        new
                        {
                            Id = 5,
                            Name = "Emergency Grocery List",
                            UserId = 5
                        });
                });

            modelBuilder.Entity("DietCraft.API.Entities.ShoppingListIngredients", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("IngredientId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ShoppingListId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("IngredientId");

                    b.HasIndex("ShoppingListId");

                    b.ToTable("ShoppingListIngredients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IngredientId = 1,
                            Quantity = 2,
                            ShoppingListId = 1
                        },
                        new
                        {
                            Id = 2,
                            IngredientId = 2,
                            Quantity = 1,
                            ShoppingListId = 1
                        },
                        new
                        {
                            Id = 3,
                            IngredientId = 3,
                            Quantity = 3,
                            ShoppingListId = 2
                        },
                        new
                        {
                            Id = 4,
                            IngredientId = 4,
                            Quantity = 2,
                            ShoppingListId = 3
                        },
                        new
                        {
                            Id = 5,
                            IngredientId = 5,
                            Quantity = 1,
                            ShoppingListId = 4
                        });
                });

            modelBuilder.Entity("DietCraft.API.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<byte>("RoleId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "john@example.com",
                            FirstName = "John",
                            LastName = "Doe",
                            PasswordHash = "hashed_password",
                            RoleId = (byte)2,
                            UserName = "john_doe"
                        },
                        new
                        {
                            Id = 2,
                            Email = "alice@example.com",
                            FirstName = "Alice",
                            LastName = "Smith",
                            PasswordHash = "hashed_password",
                            RoleId = (byte)2,
                            UserName = "alice_smith"
                        },
                        new
                        {
                            Id = 3,
                            Email = "bob@example.com",
                            FirstName = "Bob",
                            LastName = "Johnson",
                            PasswordHash = "hashed_password",
                            RoleId = (byte)2,
                            UserName = "bob_johnson"
                        },
                        new
                        {
                            Id = 4,
                            Email = "emily@example.com",
                            FirstName = "Emily",
                            LastName = "Brown",
                            PasswordHash = "hashed_password",
                            RoleId = (byte)2,
                            UserName = "emily_brown"
                        },
                        new
                        {
                            Id = 5,
                            Email = "david@example.com",
                            FirstName = "David",
                            LastName = "Wilson",
                            PasswordHash = "hashed_password",
                            RoleId = (byte)2,
                            UserName = "david_wilson"
                        });
                });

            modelBuilder.Entity("DietCraft.API.Entities.UserDiet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DietId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaxKcal")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DietId");

                    b.HasIndex("UserId");

                    b.ToTable("UserDiets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DietId = 1,
                            MaxKcal = 2000,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            DietId = 2,
                            MaxKcal = 1800,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            DietId = 3,
                            MaxKcal = 2200,
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            DietId = 4,
                            MaxKcal = 1900,
                            UserId = 4
                        },
                        new
                        {
                            Id = 5,
                            DietId = 5,
                            MaxKcal = 2100,
                            UserId = 5
                        });
                });

            modelBuilder.Entity("DietCraft.API.Entities.Diet", b =>
                {
                    b.HasOne("DietCraft.API.Entities.DietType", "DietType")
                        .WithMany()
                        .HasForeignKey("DietTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DietType");
                });

            modelBuilder.Entity("DietCraft.API.Entities.IngredientsForMeal", b =>
                {
                    b.HasOne("DietCraft.API.Entities.Ingredient", "Ingredient")
                        .WithMany()
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DietCraft.API.Entities.Meal", "Meal")
                        .WithMany()
                        .HasForeignKey("MealId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingredient");

                    b.Navigation("Meal");
                });

            modelBuilder.Entity("DietCraft.API.Entities.Recipe", b =>
                {
                    b.HasOne("DietCraft.API.Entities.Meal", "Meal")
                        .WithMany()
                        .HasForeignKey("MealId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Meal");
                });

            modelBuilder.Entity("DietCraft.API.Entities.ShoppingList", b =>
                {
                    b.HasOne("DietCraft.API.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DietCraft.API.Entities.ShoppingListIngredients", b =>
                {
                    b.HasOne("DietCraft.API.Entities.Ingredient", "Ingredient")
                        .WithMany()
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DietCraft.API.Entities.ShoppingList", "ShoppingList")
                        .WithMany("ShoppingListIngredients")
                        .HasForeignKey("ShoppingListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingredient");

                    b.Navigation("ShoppingList");
                });

            modelBuilder.Entity("DietCraft.API.Entities.User", b =>
                {
                    b.HasOne("DietCraft.API.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("DietCraft.API.Entities.UserDiet", b =>
                {
                    b.HasOne("DietCraft.API.Entities.Diet", "Diet")
                        .WithMany()
                        .HasForeignKey("DietId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DietCraft.API.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Diet");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DietCraft.API.Entities.ShoppingList", b =>
                {
                    b.Navigation("ShoppingListIngredients");
                });
#pragma warning restore 612, 618
        }
    }
}
